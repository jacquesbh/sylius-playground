name: app
type: php:7.3
build:
    flavor: none

runtime:
    extensions: []


relationships:
    database: "db:mysql"

web:
    locations:
        "/":
            root: "public"
            expires: -1
            passthru: "/index.php"
        "/assets/shop":
            expires: 2w
            passthru: false
            allow: false
            rules:
                # Only allow static files from the assets directories.
                '\.(css|js|jpe?g|png|gif|svgz?|ico|bmp|tiff?|wbmp|ico|jng|bmp|html|pdf|otf|woff2|woff|eot|ttf|jar|swf|ogx|avi|wmv|asf|asx|mng|flv|webm|mov|ogv|mpe|mpe?g|mp4|3gpp|weba|ra|m4a|mp3|mp2|mpe?ga|midi?)$':
                    allow: true
        "/media/image":
            expires: 2w
            passthru: false
            allow: false
            rules:
                # Only allow static files from the assets directories.
                '\.(jpe?g|png|gif|svgz?)$':
                    allow: true
        "/media/cache":
            expires: 2w
            passthru: false
            allow: false
            rules:
                # Only allow static files from the assets directories.
                '\.(jpe?g|png|gif|svgz?)$':
                    allow: true
        "/media/cache/resolve":
            passthru: "/index.php"
            scripts: false
            expires: -1
            allow: true

disk: 1024

mounts:
    "/var": { source: local, source_path: var }
    "/public/uploads": { source: local, source_path: uploads }
    "/public/media": { source: local, source_path: media }

hooks:
    build: |
        set -x -e

        curl -s https://get.symfony.com/cloud/configurator | (>&2 bash)
        (>&2 symfony-build)
        (>&2 symfony console sylius:install:check-requirements)
        (>&2
            # Setup everything to use the Node installation
            unset NPM_CONFIG_PREFIX
            export NVM_DIR=$HOME/.nvm GULP_ENV=prod
            set +x && . "${NVM_DIR}/nvm.sh" use --lts && set -x
            # Starting from here, everything is setup to use the same Node
            yarn build
        )

    deploy: |
        set -x -e

        mkdir -p public/media/image var/log
        (>&2 symfony-deploy)
